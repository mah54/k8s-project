---
- name: Join control planes to cluster
  hosts: cp-nodes-join
  become: true
  become_user: root

#Use these variables to join to an existing cluster
  vars:
    USER: "ubuntu"
    USER_HOME: "/home/ubuntu"
#    loadbalancer: "130.185.121.10"
#    token: "abcdef.0123456789abcdef"
#    token_hash: "sha256:be705b73c4de9089d9df0419ac8ed2de69add53dc6a415ed0f812b749b94bb6a"
#    cert_key: "fe2f1920c69f63856efad27f73a52ca62995cab0ced56126b6bf8518ed105fc6"

  tasks:
  - name: Join control plane nodes
    shell: |
      #Paste your command here
      kubeadm join 130.185.121.10:6443 --token abcdef.0123456789abcdef \
        --discovery-token-ca-cert-hash sha256:be705b73c4de9089d9df0419ac8ed2de69add53dc6a415ed0f812b749b94bb6a \
        --control-plane --certificate-key fe2f1920c69f63856efad27f73a52ca62995cab0ced56126b6bf8518ed105fc6

#  - name: Join to an existing cluster by variables
#    shell: |
#      kubeadm join "{{ loadbalancer }}":6443 \
#        --token "{{ token }}" \
#        --discovery-token-ca-cert-hash "{{ token_hash }}" \
#        --control-plane \
#        --certificate-key "{{ cert_key }}"

  - name: Create a .kube if it does not exist
    ansible.builtin.file:
      path: "{{ USER_HOME }}/.kube"
      state: directory

  - name: Configure an account on the Control Plane Node to have admin access to the API server from a non-privileged account
    ansible.builtin.copy:
      src: "/etc/kubernetes/admin.conf"
      dest: "{{ USER_HOME }}/.kube/config"
      owner: "{{ USER }}"
      group: "{{ USER }}"
      remote_src: yes

